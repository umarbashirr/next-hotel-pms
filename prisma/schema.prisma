generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(cuid())
  email     String      @unique
  name      String?
  password  String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  hotels    UserHotel[]
  accounts  Account[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Hotel {
  id        String      @id @default(cuid())
  name      String      @unique
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  users     UserHotel[]
}

model UserHotel {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  hotel     Hotel    @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  hotelId   String
  role      Role     @default(FRONT_OFFICE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  FRONT_OFFICE
  ADMIN
  HOTEL_MANAGER
  BOT
}
